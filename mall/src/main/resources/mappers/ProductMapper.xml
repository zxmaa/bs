<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">
<mapper namespace="com.bs.mall.dao.ProductMapper">
    <resultMap id="productMap" type="com.bs.mall.entity.Product">
        <id property="productId" column="product_id"/>
        <result property="productName" column="product_name"/>
        <result property="productTitle" column="product_title"/>
        <result property="productPrice" column="product_price"/>
        <result property="productSalePrice" column="product_sale_price"/>
        <result property="productCreateDate" column="product_create_date"/>
        <result property="productIsEnabled" column="product_isEnabled"/>
        <result property="productSaleCount" column="product_sale_count"/>
        <result property="productReviewCount" column="product_review_count"/>
        <association property="productCategory" javaType="com.bs.mall.entity.Category">
            <id property="categoryId" column="product_category_id"/>
        </association>
    </resultMap>
    <select id="queryProductList" resultType="com.bs.mall.dao.pojo.Product">
        select *
        from product
        <where>
            <if test="null != categoryId">
               and  product_category_id = #{categoryId}
            </if>
            <if test="null != searchValue and searchValue != ''">
                and
                <foreach collection="searchValueSplit" index="index" item="item" open="(" separator="or" close=")">
                    product_name LIKE concat('%',#{item},'%')
                </foreach>
            </if>

        </where>
        <if test="null != orderBy and orderBy!= ''">
            order by ${orderBy}
            <if test="null != isDesc and isDesc = true"> <!--注：不写默认为升序-->
                desc
            </if>
        </if>
    </select>
    
    <insert id="insertOne" parameterType="com.bs.mall.entity.Product">
        INSERT product (product_id,product_name,product_title,product_price,product_sale_price,product_create_date,product_isEnabled,product_category_id)
        VALUES(
        null,
        #{product.productName},
        #{product.productTitle},
        #{product.productPrice},
        #{product.productSalePrice},
        #{product.productCreateDate},
        #{product.productIsEnabled},
        #{product.productCategory.categoryId})
    </insert>

    <update id="updateOne" parameterType="com.bs.mall.entity.Product">
        UPDATE product
        <set>
            <if test="product.productName != null">product_name = #{product.productName},</if>
            <if test="product.productTitle != null">product_title = #{product.productTitle},</if>
            <if test="product.productPrice != null">product_price = #{product.productPrice},</if>
            <if test="product.productSalePrice != null">product_sale_price = #{product.productSalePrice},</if>
            <if test="product.productIsEnabled != null">product_isEnabled = #{product.productIsEnabled},</if>
            <if test="product.productCategory != null">
                product_category_id = #{product.productCategory.categoryId},
            </if>
            <if test="product.productSaleCount != null">
                product_sale_count = #{product.productSaleCount},
            </if>
            <if test="product.productReviewCount != null">
                product_review_count = #{product.productReviewCount}
            </if>
        </set>
        <where>
            product_id = #{product.productId}
        </where>
    </update>

    <select id="selectOne" resultMap="productMap" parameterType="int">
        select * from product where product_id = #{product_id}
    </select>

    <select id="selectTotal" resultType="int">
        SELECT COUNT(product_id) FROM product
        <where>
            <if test="product != null">
                <if test="product.productName != null">product_name LIKE concat('%',#{product.productName},'%')</if>
                <if test="product.productPrice != null">and product_sale_price &lt;= #{product.productPrice}</if>
                <if test="product.productSalePrice != null">and product_sale_price &gt;= #{product.productSalePrice}</if>
                <if test="product.productCategory != null">
                    <if test="product.productCategory.categoryId != null">and product_category_id =
                        #{product.productCategory.categoryId}
                    </if>
                </if>
            </if>
            <if test="product_isEnabled_array != null">and product_isEnabled IN
                <foreach collection="product_isEnabled_array" index="index" item="item" open="(" separator=","
                         close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <select id="select" resultMap="productMap">
        SELECT
        product_id,
        product_name,
        product_title,
        product_price,
        product_sale_price,
        product_create_date,
        product_isEnabled,
        product_category_id,
        product_sale_count,
        product_review_count
        FROM product
        <where>
            <if test="product != null">
                <if test="product.productName != null">product_name LIKE concat('%',#{product.productName},'%')</if>
                <if test="product.productPrice != null">and product_sale_price &lt;= #{product.productPrice}</if>
                <if test="product.productSalePrice != null">and product_sale_price &gt;= #{product.productSalePrice}</if>
                <if test="product.productCategory != null">
                    <if test="product.productCategory.categoryId != null">and product_category_id =
                        #{product.productCategory.categoryId}
                    </if>
                </if>
            </if>
            <if test="product_isEnabled_array != null">
                and product_isEnabled IN
                <foreach collection="product_isEnabled_array" index="index" item="item" open="(" separator=","
                         close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        <if test="orderUtil != null">
            ORDER BY ${orderUtil.orderBy}
            <if test="orderUtil.isDesc">desc</if>
        </if>
        <if test="pageUtil != null">
            LIMIT #{pageUtil.pageStart},#{pageUtil.count}
        </if>
    </select>

    <!--  ==================================fore=========================================-->
    <select id="queryProductListFore" resultType="com.bs.mall.dao.pojo.Product">
        select p.*
        from product p
        left join category c on p.product_category_id = c.category_id
        <where>
            product_isEnabled <![CDATA[!= ]]> 1
            <if test="null != categoryId">
                and  product_category_id = #{categoryId}
            </if>
            <if test="null != searchValueSplit">
                and
                (<foreach collection="searchValueSplit" index="index" item="item" open="(" separator="or" close=")">
                    product_name LIKE concat('%',#{item},'%')
                </foreach>
                or
                <foreach collection="searchValueSplit" index="index" item="item" open="(" separator="or" close=")">
                    category_name LIKE concat('%',#{item},'%')
                </foreach>)
            </if>

        </where>
        <if test="null != orderBy and orderBy!= ''">
            order by ${orderBy}
            <if test="null != isDesc and 'true'.toString() == isDesc.toString() "> <!--注：不写默认为升序-->
                desc
            </if>
        </if>
    </select>

    <select id="getPropertyValueByProductIdFore" resultType="com.bs.mall.dto.res.ForePropertyValueResDto">
        select t1.property_name,t2.property_value_value
        from  property_value t2
        left join  property t1  on t1.property_id = t2.property_id
        where t2.product_id = #{productId}
    </select>

    <select id="getReviewFore" resultType="com.bs.mall.dto.res.ForeReviewSimpleResDto">
        select t2.user_name,t1.review_content,t1.review_createdate
        from review t1
        left join user t2 on t1.user_id = t2.user_id
        where t1.product_id = #{productId}
        order by review_createdate desc
    </select>
</mapper>